# Chat Service Configuration
# This service is implemented in Go, so it uses a different configuration structure

database:
  mongodb:
    uri: "mongodb://chat_service:chat_password@localhost:27017/chat_service_db"
    database: "chat_service_db"
    # Schema init script relative path from internal/config
    init_script: "schema.js"
    auto_init: true
    
server:
  host: "0.0.0.0"
  port: 8084
  cors:
    allowed_origins:
      - "http://localhost:3000"
      - "http://localhost:5173"
    allowed_methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
    allowed_headers:
      - "Content-Type"
      - "Authorization"
    
auth:
  jwt:
    public_key_path: "/app/keys/jwt_public.pem"
    issuer: "auth-service"
    audience: "social-media-app"
    
eureka:
  enabled: true
  client:
    service_url: "http://eureka-server:8761/eureka"
  instance:
    hostname: "chat-service"
    port: 8084
    
websocket:
  path: "/ws"
  max_message_size: 1024
  ping_interval_seconds: 30
  
logging:
  level: "debug"  # debug, info, warn, error
  format: "json"
  
redis:
  host: "localhost"
  port: 6379
  password: ""
  db: 0
  
tracing:
  enabled: true
  exporter: "jaeger"
  jaeger:
    endpoint: "http://jaeger:14268/api/traces"
