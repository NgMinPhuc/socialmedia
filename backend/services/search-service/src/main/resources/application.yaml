server:
  port: 8085

spring:
  application:
    name: search-service
  elasticsearch:
    uris: ${ELASTICSEARCH_HOST:http://localhost:9200}
    username: ${ELASTICSEARCH_USERNAME:elastic}
    password: ${ELASTICSEARCH_PASSWORD:changeme}
    connection-timeout: 5s
    socket-timeout: 3s
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: search-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 500
      fetch-max-wait: 500
      fetch-min-size: 1
      heartbeat-interval: 3000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      batch-size: 16384
      buffer-memory: 33554432
  cache:
    type: redis
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    ttl: 600 # 10 minutes
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081
          jwk-set-uri: http://localhost:8081/.well-known/jwks.json
  cloud:
    discovery:
      enabled: true

jwt:
  signerKey: "oZNYys2LweTrJc3DqEp+zFOz8LbqbqTNzOEAE5eHIs65gnJEN3rlAGpzk2P1hYFP"
  valid-duration: 3600

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true

app:
  post-service:
    url: http://localhost:8083
  user-service:
    url: http://localhost:8082

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true

resilience4j:
  circuitbreaker:
    instances:
      searchService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
  retry:
    instances:
      searchRetry:
        maxAttempts: 3
        waitDuration: 100ms
        retryExceptions:
          - org.springframework.web.client.ResourceAccessException
          - java.util.concurrent.TimeoutException

logging:
  level:
    org.springframework.data.elasticsearch.client.WIRE: DEBUG
    com.socialmedia.search_service: INFO
    org.springframework.security: DEBUG